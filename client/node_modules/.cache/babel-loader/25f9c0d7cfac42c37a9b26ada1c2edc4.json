{"ast":null,"code":"var _jsxFileName = \"/home/victor/MEGAsync/React/crawn-clothing/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sing-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sing-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentails => dispatch(signUpStart(userCredentails))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/victor/MEGAsync/React/crawn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentails"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n   const [userCredentials, setCredentials] = useState({\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n   });\n\n   const { displayName, email, password, confirmPassword } = userCredentials;\n\n   const handleSubmit = async event => {\n      event.preventDefault();\n\n      if (password !== confirmPassword) {\n         alert(\"Password don't match\");\n         return;\n      }\n      signUpStart({ email, password, displayName });\n   };\n\n   const handleChange = event => {\n      const { name, value } = event.target;\n      setCredentials({ ...userCredentials, [name]: value });\n   };\n\n   return (\n      <div className=\"sing-up\">\n         <h2 className=\"title\">I do not have an account</h2>\n         <span>Sign up with your email and password</span>\n         <form className=\"sing-up-form\" onSubmit={handleSubmit}>\n            <FormInput\n               type=\"text\"\n               name=\"displayName\"\n               value={displayName}\n               onChange={handleChange}\n               label=\"Display Name\"\n               required\n            />\n            <FormInput\n               type=\"email\"\n               name=\"email\"\n               value={email}\n               onChange={handleChange}\n               label=\"Email\"\n               required\n            />\n            <FormInput\n               type=\"password\"\n               name=\"password\"\n               value={password}\n               onChange={handleChange}\n               label=\"Password\"\n               required\n            />\n            <FormInput\n               type=\"password\"\n               name=\"confirmPassword\"\n               value={confirmPassword}\n               onChange={handleChange}\n               label=\"Confirm Password\"\n               required\n            />\n            <CustomButton type=\"submit\">SIGN UP</CustomButton>\n         </form>\n      </div>\n   );\n};\n\nconst mapDispatchToProps = dispatch => ({\n   signUpStart: userCredentails => dispatch(signUpStart(userCredentails)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}