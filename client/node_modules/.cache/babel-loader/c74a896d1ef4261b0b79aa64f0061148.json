{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnapshotFromUserAuth(userAuth, addtionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, addtionalData);\n    const userSnapshot = yield userRef.get();\n    console.log(\"Hello\");\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      addtionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    addtionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, addtionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/victor/MEGAsync/React/crawn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","addtionalData","userRef","userSnapshot","get","console","log","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\n\nimport UserActionTypes from \"./user.types\";\n\nexport function* getSnapshotFromUserAuth(userAuth, addtionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, addtionalData);\n        const userSnapshot = yield userRef.get();\n        console.log(\"Hello\");\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({ user, addtionalData: { displayName } }))\n    } catch (error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* signInAfterSignUp({ payload: { user, addtionalData } }) {\n    yield getSnapshotFromUserAuth(user, addtionalData);\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ])\n}"]},"metadata":{},"sourceType":"module"}